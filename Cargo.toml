[package]
name = "proto_rs"
version = "0.3.0"
description = "Rust-first gRPC macros collection for .proto/protobufs managment and more"
documentation = "https://docs.rs/proto_rs"
readme = "README.md"
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
keywords.workspace = true
categories.workspace = true

[workspace.package]
edition = "2024"
authors = ["Ivan Auwers <vonauwers@gmail.com>"]
description = "Rust-first gRPC macros collection for .proto/protobufs managment and more"
license = "MIT OR Apache-2.0"
repository = "https://github.com/4r33x/proto_rs"
homepage = "https://github.com/4r33x/proto_rs"
readme = "README.md"
keywords = ["grpc", "protobufs", "proto", "tonic", "prost"]
categories = [
  "network-programming",
  "development-tools",
  "development-tools::build-utils",
  "rust-patterns",
]

[workspace]
members = [
  "crates/prosto_derive",
  "tests/tonic_prost_test",
  "tests/proto_rs_test",
  "tests/proto_build_test",
]
resolver = "3"

[workspace.dependencies]
prosto_derive = { version = "0.3.0", path = "crates/prosto_derive" }
proto_rs = { version = "0.3.0", path = "./" }
prost = "0.14.1"


[dependencies]
prosto_derive.workspace = true
prost.workspace = true
fastnum = { version = "0.7.2", optional = true }
inventory = { version = "0.3.21", optional = true }
solana-address = { version = "1", optional = true }


[features]
fastnum = ["dep:fastnum"]
solana = ["dep:solana-address"]
# Schema collection for build scripts
build-schemas = ["inventory"]
# Enable live proto dumping
emit-proto-files = ["prosto_derive/emit-proto-files"]

[dev-dependencies]
tonic = "0.14.2"
tonic-prost = "0.14.1"

tokio = { version = "1.47.1", features = ["full"] }
tokio-stream = "0.1.17"

serde = { version = "1.0.228", features = ["derive"] }
serde_json = "1.0.145"
chrono = "0.4.42"


[package.metadata.docs.rs]
all-features = true


[workspace.lints.rust]
unsafe_code = { level = "forbid", priority = 0 }

[workspace.lints.clippy]
# cargo = { level = "deny", priority = -1 }
# complexity = { level = "deny", priority = -1 }
# correctness = { level = "deny", priority = -1 }
# pedantic = { level = "deny", priority = -1 }
perf = { level = "deny", priority = -1 }
# restriction = { level = "warn", priority = -1 }
# style = { level = "deny", priority = -1 }
